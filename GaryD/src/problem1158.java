import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

/*
 조세퍼스 문제는 다음과 같다.
1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 
이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 
이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-조세퍼스 순열이라고 한다. 
예를 들어 (7, 3)-조세퍼스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.
N과 K가 주어지면 (N, K)-조세퍼스 순열을 구하는 프로그램을 작성하시오. 
 
 */
public class problem1158 {
	public static void main(String [] args) {
		Scanner sc = new Scanner(System.in);
		String str = sc.nextLine();

		Queue qu = new LinkedList();
		
		ArrayList result = new ArrayList();
		
		String[] strArr = str.split(" ");
		
		int length = Integer.parseInt(strArr[0]);
		int cnt = Integer.parseInt(strArr[1]);
		for (int i = 0; i < length; i++) {
			qu.add(i+1);          
		}
		
		int count = 1;
		while(true) {
			if(qu.size() == 1) {
				result.add(qu.poll());
				break;
			}
			
			if(count == cnt) {
				result.add(qu.poll());
				count = 0;
			}else {
				qu.add(qu.poll());
			}
			
			count++;
		}
		System.out.print("<");
		for (int i = 0; i < result.size(); i++) {
			if((i+1) == result.size()) {
				System.out.print(result.get(i));
			}else {
				System.out.print(result.get(i) + ", ");
			}
		}
		System.out.print(">");
	}
}
